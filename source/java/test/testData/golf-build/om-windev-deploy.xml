<?xml version="1.0"?>
<!-- ================================================================ -->
<!-- Windows Devleoper Deploy                                         -->
<!-- Ant docs:  http://jakarta.apache.org/ant/manual/                 -->
<!-- ================================================================ -->
<project name="win-gcc-deploy" basedir="." default="help">

    <!-- Access any environment variables -->
    <property environment="env"/>
    
     <!-- if the user has his own properties set then these will override
    anything else. The USERPROFILE on Windows is set
    to C:\Documents and Settings\USERNAME -->
    <property file="${env.USERPROFILE}/gcc.properties"/>

    <!-- Default standard system build properties -->
    <property file="build.properties"/>

    <!-- Windows developer deploy properties -->
    <property file="om-windev-deploy.properties"/>

    <target name="help" depends="usage"
        description="Help on what targets are available"/>

    <target name="usage" description="Help on what targets are available">
        <echo level="info" message="Order Managerment Windows Developer Deploy Script:"/>
        <echo level="info" message=""/>
        <echo level="info" message="Possible targets are:"/>
        <echo level="info" message=""/>
        <echo level="info" message=" deploy-all                  Deploy all Applications and DRPs."/>
        <echo level="info" message=" deploy-drp-1                Deploy DRP drp-1."/>
        <echo level="info" message=" deploy-drp-bu               Deploy Backup drp."/>
        <echo level="info" message=" help                        Same as usage."/>
        <echo level="info" message=" usage                       This message of all possible targets."/>
    </target>

    <target name="build and deploy" description="Build and deploy the gcc webapp and fulfillment to the windev env">
        <antcall target="deploy-clean"/>
        <antcall target="deploy-gcc"/>
        <antcall target="deploy-fulfillment"/>
    </target>

    <target name="deploy-clean">
         <!-- first compile all the classes and jar'm up -->
        <ant antfile="build.xml" dir="." target="compile-all-clean" inheritAll="true"/>
        <ant antfile="build.xml" dir="." target="jar" inheritAll="true"/>

        <delete dir="${gcc.deploy.dir}" failonerror="true" includeEmptyDirs="true"/>
        <delete dir="${webapp.deploy.config}" failonerror="true" includeEmptyDirs="true"/>
        <delete dir="${gcc.fulfillment.deploy.configpath}" failonerror="true" includeEmptyDirs="true"/>
        <delete dir="${gcc.fulfillment.deploy.classpath}" failonerror="true" includeEmptyDirs="true"/>
        <delete dir="${gcc.fulfillment.deploy.lib}" failonerror="true" includeEmptyDirs="true"/>
        <delete dir="${gcc.war.deploy.lib}" failonerror="true" includeEmptyDirs="true"/>
        <delete dir="${gcc.app.deploy.classpath}" failonerror="true" includeEmptyDirs="true"/>
        <delete dir="${gcc.app.deploy.lib}" failonerror="true" includeEmptyDirs="true"/>
        <mkdir dir="${gcc.deploy.dir}"/>
        <mkdir dir="${webapp.deploy.config}"/>
        <mkdir dir="${gcc.fulfillment.deploy.configpath}"/>
        <mkdir dir="${gcc.fulfillment.deploy.classpath}"/>
        <mkdir dir="${gcc.fulfillment.deploy.lib}"/>
        <mkdir dir="${gcc.war.deploy.lib}"/>
        <mkdir dir="${gcc.app.deploy.classpath}"/>
        <mkdir dir="${gcc.app.deploy.lib}"/>
    </target>


    <target name="deploy-gcc">
        <antcall target="copy-lib-to-module">
            <param name="module.lib.dir" value="${gcc.app.deploy.lib}"/>
            <param name="war.lib.dir" value="${gcc.war.deploy.lib}"/>
        </antcall>

        <unjar dest="${webapp.deploy.config}">
            <fileset dir="${predeploy.lib.dir}/shared/configpath" includes="*.jar"/>
         </unjar>

        <unjar dest="${gcc.war.deploy.classes}">
            <fileset dir="${predeploy.lib.dir}/shared/classpath" includes="*.jar"/>
         </unjar>

        <antcall target="copy-app-config-files">
            <param name="copy.todir" value="${webapp.deploy.config}"/>
            <param name="app.dir" value="gcc"/>
        </antcall>

        <antcall target="copy-webapp-classpath-files">
            <param name="copy.wartodir" value="${gcc.war.deploy.classes}"/>
            <param name="copy.globaltodir" value="${gcc.app.deploy.classpath}"/>
            <param name="app.dir" value="gcc"/>
        </antcall>


        <antcall target="copy-resourcebundle-files">
            <param name="copy.todir" value="${gcc.war.deploy.classes}"/>
            <param name="app.dir" value="gcc"/>
        </antcall>

        <antcall target="search-replace-app">
            <param name="config.dir" value="${webapp.deploy.config}"/>
            <param name="classpath.dir" value="${gcc.war.deploy.classes}"/>
        </antcall>
        <!-- Added to deoply app-classpath correctly on windev -->
        <antcall target="run-envtool">
            <param name="working.dir" value="${gcc.app.deploy.classpath}"/>
        </antcall>
    </target>


    <target name="deploy-fulfillment" >

        <!-- refresh the gcc fulfiller deploy dir -->
        <delete dir="${fulfillment.deploy.dir}" failonerror="true" includeEmptyDirs="true"/>
        <mkdir dir="${fulfillment.deploy.dir}"/>

        <!-- copy the gcc jar to the gcc fulfiller deploy dir -->
        <copy todir="${fulfillment.deploy.dir}/classpath" >
            <fileset dir="${dist.lib.dir}">
               <include name="${jar.file}"/>
            </fileset>
        </copy>

        <!-- copy module config dir to the gcc fulfiller deploy dir -->
         <copy todir="${fulfillment.deploy.dir}/META-INF" overwrite="true">
            <fileset dir="${app.config.dir}/fulfillment/META-INF">
                <exclude name="**/*.keep"/>
                <exclude name="**/*.contrib"/>
                <include name="**"/>
            </fileset>
        </copy>

        <!-- copy all the configpath config files to the gcc fulfiller deploy dir -->
        <antcall target="copy-app-config-files">
            <param name="copy.todir" value="${gcc.fulfillment.deploy.configpath}"/>
            <param name="app.dir" value="fulfillment"/>
        </antcall>

        <!-- copy all the classpath config files to the gcc fulfiller deploy dir -->
        <antcall target="copy-fulfiller-classpath-files">
            <param name="copy.todir" value="${gcc.fulfillment.deploy.classpath}"/>
            <param name="app.dir" value="fulfillment"/>
        </antcall>

        <!-- copy all the resourcebundles to the gcc fulfiller deploy dir -->
        <antcall target="copy-resourcebundle-files">
            <param name="copy.todir" value="${gcc.fulfillment.deploy.classpath}"/>
            <param name="app.dir" value="gcc"/>
        </antcall>

        <!-- copy all the shared configpath and classpath config files to the gcc fulfiller deploy dir -->
        <copy todir="${gcc.fulfillment.deploy.classpath}" overwrite="true">
            <fileset dir="${app.config.dir}/../shared/classpath">
                <exclude name="**/*.keep"/>
                <exclude name="**/*.contrib"/>
                <include name="net/**"/>
            </fileset>
        </copy>
       <copy todir="${gcc.fulfillment.deploy.configpath}" overwrite="true">
            <fileset dir="${app.config.dir}/../shared/configpath">
                <exclude name="**/*.keep"/>
                <exclude name="**/*.contrib"/>
                <include name="net/**"/>
            </fileset>
        </copy>


        <echo message="Copying GCC configpath files to fulfiller configpath"/>
        <copy todir="${gcc.fulfillment.deploy.configpath}" overwrite="true">
            <fileset dir="${app.config.dir}/gcc/configpath">
                <exclude name="**/*.keep"/>
                <exclude name="**/*.contrib"/>
                <include name="net/**"/>
            </fileset>
        </copy>


        <!--copy the generated configuration for the JAXB stuff -->
        <copy todir="${gcc.fulfillment.deploy.classpath}" overwrite="true">
            <fileset dir="${generated.source.dir}">
                <exclude name="**/*.keep"/>
                <exclude name="**/*.contrib"/>
                <exclude name="**/*.java"/>
                <include name="**/*.properties"/>
            </fileset>
        </copy>

        <!-- search and replace all keys in the gcc fulfiller configpath and classpath dirs -->
        <antcall target="search-replace-app">
            <param name="config.dir" value="${gcc.fulfillment.deploy.configpath}"/>
            <param name="classpath.dir" value="${gcc.fulfillment.deploy.classpath}"/>
        </antcall>
    </target>


    <target name="copy-lib-to-module" description="Copies war jars from the /lib dir to the war lib directory">
        <copy todir="${war.lib.dir}" flatten="true">
            <fileset dir="${predeploy.lib.dir}">
                <include name="taglib/displaytag.jar"/>
                <include name="taglib/taglibs-string.jar"/>
                <include name="sap/ipc/*.jar"/>
                <include name="shared/nikenet-global.jar"/>
                <include name="shared/nikenet-om.jar"/>
                <include name="securetoken/nikeb2b_1c.jar"/>
                <include name="apache/jakarta/commons/commons-collections.jar"/>
                <include name="apache/jakarta/commons/commons-codec-1.2.jar"/>
                <include name="apache/jakarta/commons/commons-beanutils.jar"/>
                <include name="apache/jakarta/commons/commons-digester.jar"/>
                <include name="apache/jakarta/commons/commons-lang.jar"/>
                <include name="apache/jakarta/commons/commons-logging.jar"/>
                <include name="apache/jakarta/commons/commons-resources.jar"/>
                <include name="apache/jakarta/commons/commons-validator.jar"/>
                <include name="apache/jakarta/taglibs/jstl.jar"/>
                <include name="apache/jakarta/taglibs/standard.jar"/>
                <include name="apache/jakarta/struts/struts.jar"/>
                <include name="apache/jakarta/struts/struts-el.jar"/>
                <include name="apache/xerces.jar"/>  <!-- need xerces 1.4.4 for the ipc code (thirdparty.jar)  -->
                <include name="jaxb/sax.jar"/>
                <include name="jaxb/dom.jar"/>
                <include name="xineo/xineo-xml-1.1.0.jar"/>
                <!-- Following files are for Cactus tests -->
                <include name="test/aspectjrt-1.1.1.jar"/>
                <include name="test/cactus-1.5.jar"/>
                <include name="test/junit-3.8.1.jar"/>
                <include name="apache/jakarta/commons/commons-httpclient.jar"/>

            </fileset>
        </copy>
    </target>

    <target name="copy-app-config-files">
        <echo message="from: ${app.config.dir}/${app.dir}/configpath/**  to: ${copy.todir}  "/>
        <copy todir="${copy.todir}" overwrite="true">
            <fileset dir="${app.config.dir}/${app.dir}/configpath">
                <exclude name="**/*.keep"/>
                <exclude name="**/*.contrib"/>
                <include name="**"/>
            </fileset>
        </copy>
    </target>

    <target name="copy-webapp-classpath-files">
        <echo message="from: ${app.config.dir}/${app.dir}/classpath/**  to: ${copy.wartodir}  "/>
        <copy todir="${copy.wartodir}" overwrite="true">
            <fileset dir="${app.config.dir}/${app.dir}/classpath">
                <exclude name="**/*.keep"/>
                <exclude name="**/*.contrib"/>
                <exclude name="properties/**"/>
                <include name="**"/>
            </fileset>
            <fileset dir="${dist.dir}">
                <include name="${buildinfo}"/>
            </fileset>
        </copy>
        <!-- Copy Buildinfo from buildinfo.txt to gccBuildInfo.txt -->
        <echo message="COPY: ${copy.wartodir}/${buildinfo} TO ${copy.wartodir}/${gccbuildinfo}"/>
        <copyfile src="${copy.wartodir}/${buildinfo}" dest="${copy.wartodir}/${gccbuildinfo}"/>

        <echo message="from: ${app.config.dir}/${app.dir}/classpath/**  to: ${copy.globaltodir}  "/>
        <copy todir="${copy.globaltodir}" overwrite="true">
            <fileset dir="${app.config.dir}/${app.dir}/classpath">
                <exclude name="**/*.keep"/>
                <exclude name="**/*.contrib"/>
                <include name="properties/**"/>
            </fileset>
        </copy>
    </target>

    <target name="copy-fulfiller-classpath-files">
        <echo message="from: ${app.config.dir}/${app.dir}/classpath/**  to: ${copy.todir}  "/>
        <copy todir="${copy.todir}" overwrite="true">
            <fileset dir="${app.config.dir}/${app.dir}/classpath">
                <exclude name="**/*.keep"/>
                <exclude name="**/*.contrib"/>
                <include name="**"/>
            </fileset>
        </copy>
    </target>



    <target name="copy-resourcebundle-files">
        <!--  resourcebundles  -->
        <native2ascii encoding="UTF8"
            src="${app.root.dir}/resourcebundles/${app.dir}"
            dest="${copy.todir}"
            includes="**/*.*"
            ext=".properties">
        </native2ascii>
    </target>



    <target name="search-replace-app">
        <!--TODO - not sure if the commented stuff below is needed -->
<!--        <replace file="${config.dir}\atg\dynamo\service\jdbc\JTDataSource.properties"-->
<!--            token="%%db.jdbc.minConnections%%"-->
<!--            value="${db.jdbc.minConnections}"/>-->
<!--        <replace file="${config.dir}\atg\dynamo\service\jdbc\JTDataSource.properties"-->
<!--            token="%%db.jdbc.maxConnections%%"-->
<!--            value="${db.jdbc.maxConnections}"/>-->
        <antcall target="run-envtool">
            <param name="working.dir" value="${classpath.dir}"/>
        </antcall>
        <antcall target="run-envtool">
            <param name="working.dir" value="${config.dir}"/>
        </antcall>
    </target>

    <target name="run-envtool">
        <echo message="working.dir=${working.dir}"/>
        <exec executable="${basedir}/../bin/envtool.bat" failonerror="true">
            <arg value="${working.dir}"/>
            <arg path="${envtool.location}"/>
            <arg value="${envstore.location}"/>
            <arg value="${envtool.key}"/>
            <arg value="${envtool.log}"/>
        </exec>
    </target>

    <target name="echo-info">
            <echo message="java.home = ${java.home}"/>
            <echo message="ant.java.version = ${ant.java.version}"/>
            <echo message="ant.version = ${ant.version}"/>
            <echo message="ant.project.name = ${ant.project.name}"/>
        <echo message="ant.file = ${ant.file}"/>
        <echo message="user.dir = ${user.dir}"/>
        <echo message="basedir = ${basedir}"/>
    </target>
</project>