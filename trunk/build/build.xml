<?xml version="1.0" encoding="ISO-8859-1"?>

<project name="antscript_visualizer" default="all">
	<target name="init">
		<property name="antform.home" value="/Users/douglasbullard/Downloads/Antform/antform-bin-2.0beta2"/>
		<taskdef name="antform"
				 classname="com.sardak.antform.AntForm"
				 classpath="${antform.home}/lib/antform.jar"/>
		<taskdef name="antmenu"
				 classname="com.sardak.antform.AntMenu"
				 classpath="${antform.home}/lib/antform.jar"/>

		<taskdef name="versionupdate"
		         classname="com.ryangrier.ant.VersionUpdate"
		         classpath="${basedir}/lib/version_tool.jar"/>

		<taskdef name="buildupdate"
		         classname="com.ryangrier.ant.BuildUpdate"
		         classpath="${basedir}/lib/version_tool.jar"/>


		<path id="antscript.classpath">
			<pathelement location="${basedir}/lib/jnlp.jar"/>
			<pathelement location="${basedir}/lib/log4j.jar"/>
			<pathelement location="${basedir}/lib/jdom.jar"/>
			<pathelement location="${basedir}/lib/commons-lang.jar"/>
			<pathelement location="${basedir}/lib/junit.jar"/>
			<pathelement location="${basedir}/lib/javac2.jar"/>
			<pathelement location="${basedir}/lib/bcel.jar"/>
			<pathelement location="${basedir}/lib/jhall.jar"/>
		</path>

		<!-- The task requires the following libraries from IntelliJ IDEA distribution: -->
		<!--   javac2.jar; jdom.jar; bcel.jar -->
		<taskdef name="javac2" classname="com.intellij.uiDesigner.ant.Javac2" classpathref="antscript.classpath"/>

		<!-- Compiler options -->

		<property name="compiler.debug" value="on"/>
		<property name="compiler.generate.no.warnings" value="off"/>
		<property name="compiler.args" value=""/>
		<property name="compiler.max.memory" value="128m"/>
		<patternset id="compiler.excluded"/>
		<patternset id="compiler.resources">
			<include name="**/?*.properties"/>
			<include name="**/?*.xml"/>
			<include name="**/?*.html"/>
			<include name="**/?*.dtd"/>
			<include name="**/?*.tld"/>
			<include name="**/?*.gif"/>
			<include name="**/?*.png"/>
			<include name="**/?*.jpeg"/>
			<include name="**/?*.jpg"/>
		</patternset>


		<property name="classes_output" value="${basedir}/classes"/>
		<property name="zip_output" value="${basedir}/zip_temp"/>
		<property name="testoutput" value="${basedir}/classes"/>

		<property file="mybuild.properties"/>
		<property file="build.properties"/>

		<filterset id="filters">
			<filter token="hostname" value="${hostname}"/>
			<filter token="alias" value="${alias}"/>
			<filter token="keypassword" value="${keypassword}"/>
			<filter token="storepassword" value="${storepassword}"/>
			<filter token="keystore" value="${keystore}"/>
		</filterset>

		<patternset id="excluded.from.module.antscript_visualizer"/>

		<patternset id="excluded.from.compilation.antscript_visualizer">
			<patternset refid="excluded.from.module.antscript_visualizer"/>
			<patternset refid="compiler.excluded"/>
		</patternset>

		<path id="antscript_visualizer.module.sourcepath">
			<dirset dir="${basedir}">
				<include name="src"/>
			</dirset>
		</path>

		<path id="antscript_visualizer.module.test.sourcepath">
			<dirset dir="${basedir}">
				<include name="test"/>
			</dirset>
		</path>

		<property name="webstart" value="${basedir}/webstart"/>
	</target>
<!--	        image="doc/images/testlogo.jpg">
-->	
	<target name="antform" depends="init">
	    <antform title="Send Mail" save="properties.txt">
	        <label>To send a mail, use the following form. Pick a recipient, type a subject and a body...the script will do the rest.</label>
    	    <selectionProperty label="Recipient: " 
	            property="recipient" 
	            values="address1@somewhere.com; address2@somewhere.com; address4@somewhere.com" 
	            separator=";"/>
	        <textProperty label="Subject : " property="subject" />
	        <multilineTextProperty label="Message body: " property="body"/>
	        
        </antform>
        <echo>Done</echo>
	</target>

	<target name="compile" depends="init, minor" description="compile module Ant script Visualizer production classes">
		<mkdir dir="${classes_output}"/>
		<!--<javac-->
			<!--destdir="${classes_output}"-->
			<!--debug="${compiler.debug}"-->
			<!--nowarn="${compiler.generate.no.warnings}"-->
			<!--memoryMaximumSize="${compiler.max.memory}"-->
			<!--fork="true"-->
			<!--executable="javac">-->
			<!--<compilerarg line="${compiler.args}"/>-->
			<!--<classpath refid="antscript.classpath"/>-->
			<!--<src refid="antscript_visualizer.module.sourcepath"/>-->
			<!--<patternset refid="excluded.from.compilation.antscript_visualizer"/>-->
		<!--</javac>-->
        <javac
            srcdir="${basedir}/src"
            destdir="${classes_output}"
			debug="${compiler.debug}"
            includeantruntime="false">
            <classpath refid="antscript.classpath"/>
        </javac>


        <copy todir="${classes_output}">
			<fileset dir="${basedir}/src">
				<patternset refid="compiler.resources"/>
				<type type="file"/>
				<patternset refid="excluded.from.compilation.antscript_visualizer"/>
			</fileset>
		</copy>
	</target>


	<target name="clean.module.antscript_visualizer" depends="init" description="cleanup module">
		<delete dir="${classes_output}"/>
	</target>


	<target name="clean" depends="init,clean.module.antscript_visualizer" description="cleanup all"/>

	<!--<target name="all" depends="init, clean, sign, archive" description="build all"/>-->
	<target name="all" depends="init, sign, archive" description="build all"/>

	<!-- ======================================================= -->
	<!-- Sign & distribute the client application jar            -->
	<!-- ======================================================= -->
	<target name="sign" depends="init,jar">
		<!--		<echoproperties/>-->
		<!-- uncomment the jars below as needed.  By commenting them, I'm preventing all of the relatively "static" jars  -->
		<!-- (the ones that aren't changing) from being signed each time.  This would result in the users downloading all -->
		<!-- of the jars each time the console application is run, instead of just the changed jar.  Uncomment jars as needed -->
		<!-- to handle changes (probably only the cdm-console-base in addition to cdm-console will ever need to be done   -->
		<copy todir="${webstart}" overwrite="yes" filtering="true">
			<fileset dir="${basedir}/lib/" includes="*.jar"/>
			<filterset refid="filters"/>
			<!--			<fileset dir="${basedir}/lib/" includes="antscriptVisualizer.jar"/>-->
			<!--			<fileset dir="${basedir}/lib/" includes="help.jar"/>-->
			<fileset dir="${basedir}/web/"/>
			<fileset dir="${basedir}/help/html/assets/"/>
		</copy>
		<echo>signing jars with keystore ${keystore}, alias ${alias}, keypassword ${keypassword}, storepassword
			${storepassword}</echo>

		<signjar jar="${webstart}/antscriptVisualizer.jar" keypass="hamuru" keystore="nurflugelKeystore" alias="dbulla" storepass="hamuru"/>
		<signjar jar="${webstart}/help.jar" keypass="hamuru" keystore="nurflugelKeystore" alias="dbulla" storepass="hamuru"/>
		<signjar jar="${webstart}/commons-lang.jar" keypass="hamuru" keystore="nurflugelKeystore" alias="dbulla" storepass="hamuru"/>
		<signjar jar="${webstart}/forms_rt.jar" keypass="hamuru" keystore="nurflugelKeystore" alias="dbulla" storepass="hamuru"/>
		<signjar jar="${webstart}/log4j.jar" keypass="hamuru" keystore="nurflugelKeystore" alias="dbulla" storepass="hamuru"/>
		<signjar jar="${webstart}/jdom.jar" keypass="hamuru" keystore="nurflugelKeystore" alias="dbulla" storepass="hamuru"/>
		<signjar jar="${webstart}/jhall.jar" keypass="hamuru" keystore="nurflugelKeystore" alias="dbulla" storepass="hamuru"/>
	</target>

	<!--	Jar up the app for WebStart-->
	<!--<target name="jar" depends="init,compile">-->
	<target name="jar" depends="init">
		<copy todir="${classes_output}" overwrite="yes">
			<fileset dir="${basedir}/conf"/>
		</copy>
		<jar basedir="${classes_output}" destfile="${basedir}/webstart/antscriptVisualizer.jar"/>
		<jar basedir="${basedir}/help" destfile="${basedir}/webstart/help.jar"/>
	</target>

	<!--  Take all the jars and help files, zip them up and update the link on the webpage -->
	<target name="archive" depends="init">
		<delete dir="${zip_output}"/>
		<mkdir dir="${zip_output}"/>
		<mkdir dir="${zip_output}/lib"/>
		<mkdir dir="${zip_output}/lib/help"/>
		<mkdir dir="${zip_output}/lib/images"/>
		<copy todir="${zip_output}" file="${basedir}/runme.bat"/>
		<copy todir="${zip_output}" file="${basedir}/runme.sh"/>
		<copy todir="${zip_output}/lib" file="${basedir}/webstart/antscriptVisualizer.jar"/>
		<copy todir="${zip_output}/lib/help">
			<fileset dir="${basedir}/web/help/"/>
		</copy>
		<copy todir="${zip_output}/lib/images">
			<fileset dir="${basedir}/help/html/assets/images/"/>
		</copy>
		<copy todir="${zip_output}/lib">
			<fileset dir="${basedir}/web/help"/>
			<fileset dir="${basedir}/help/html/assets/images"/>
			<fileset dir="${basedir}/lib/"/>
		</copy>

		<zip basedir="${zip_output}" destfile="${basedir}/webstart/antscriptVisualizerNoWebStart.zip"/>
	</target>

	<macrodef name="silly-macrodef">
		<sequential>

		</sequential>
	</macrodef>

	<target name="noversion">
		<echo>We're NOT incremention the major, minor, or point versions for this build.</echo>
		<property name="version.done" value="true"/>
	</target>

	<target name="minor" depends="init" unless="version.done" description="Go from 1.1 to 1.1.1">
		<versionupdate srcdir="src"
		               classname="com.nurflugel.util.antscriptvisualizer.AntParserUiImpl"
		               variablename="version"
		               debug="true"
		               versionupdatetype="Minor">
		</versionupdate>
		<property name="version.done" value="true"/>
	</target>

	<target name="major" depends="init" unless="version.done" description="Go from 1.1 to 2.0">
		<versionupdate srcdir="src"
		               classname="com.nurflugel.util.antscriptvisualizer.AntParserUiImpl"
		               variablename="version"
		               debug="true"
		               versionupdatetype="Major">
		</versionupdate>
		<property name="version.done" value="true"/>
	</target>

	<target name="point" depends="init" unless="version.done" description="Go from 1.1 to 1.2">
		<versionupdate srcdir="src"
		               classname="com.nurflugel.util.antscriptvisualizer.AntParserUiImpl"
		               variablename="version"
		               debug="true"
		               versionupdatetype="Point">
		</versionupdate>
		<property name="version.done" value="true"/>
	</target>


</project>