<?xml version="1.0"?>
<project name="antScriptVisualizer" basedir=".." default="help" xmlns:ivy="antlib:org.apache.ivy.ant">

    <import file="master-build/master-webstart-build.xml"/>

    <target name="configure" depends="master.configure"/>

    <target  name="ivyPublish" depends="-init">

        <!--<ivy:publish resolver="local-dist" pubrevision="1.0">-->
           <!--<artifacts pattern="unversioned/dist/[artifact].[ext]" />-->
           <!--&lt;!&ndash;<artifacts pattern="2/[artifact].[ext]" />&ndash;&gt;-->
        <!--</ivy:publish>-->
    <!---->
    </target>

    <target name="formatTest" depends="-init">
           <formatTestNgOutput testNgOutputDir="/Users/douglasbullard/Documents/JavaStuff/Nike_Subversion_Projects/ProductSearch/productSearch/unversioned/test-output"/>
    </target>


    <!--Validate the existance of a property.  Fail the build if it's not set.  We don't care what it is, as long as it exists-->
    <macrodef name="validatePropertiesNew">
        <!--<attribute name="buildFile"/>-->
        <attribute name="exceptions" default=""/>
        <sequential>
            <path id="classpath.buildtasks">
                <pathelement location="${lib.build}/buildtasks.jar"/>
                <!--<pathelement path="${unversioned.dir}/classes"/>-->
            </path>
            <taskdef name="validatePropertiesTask" classname="com.nurflugel.buildtasks.ValidatePropertiesTask" classpathref="classpath.buildtasks"/>
             <validatePropertiesTask  exceptions="@{exceptions}"/>
            <echo> ::::::::::::::ant.file = ${ant.file} </echo>
            <!--<echo> ::::::::::::::missing property = @{dibble.dabble} </echo>-->
            <!--<echoproperties />-->
             <!--<validatePropertiesTask />-->
             <!--<validatePropertiesTask buildFile="${ant.file}" exceptions="@{exceptions}"/>-->
        </sequential>
    </macrodef>


</project>
