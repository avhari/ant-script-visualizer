<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="./ant2html.xsl"?>
<!-- ================================================================ -->
<!-- nike.net build file                                              -->
<!-- The three build files for the server are as follows:                      -->
<!--     build.xml - used to build/distribute/run the CDM app or legacy app    -->
<!--                 on Windev.  Not for server distribution.                  -->
<!--     build-main.xml - used to create/configure/install the "external"      -->
<!--                      (outside cdm-main) data directory (cdm-main-data)    -->
<!--     build-server.xml - used for configuring the Weblogic domain and       -->
<!--                        "installing" CDM into that domain                  -->
<!--     build-batch.xml - used to create the "external" (outside cdm-batch)   -->
<!--                       data directory (cdm-batch-data)                     -->
<!--                                                                           -->
<!-- Ant docs:  http://jakarta.apache.org/ant/manual/                 -->
<!-- ================================================================ -->
<project name="cdm-dist">

    <import file="build_common_dist.xml"/>

    <target name="build-info" depends="init">

        <!-- Collect baseline data from clearcase. -->
        <exec executable="C:\Program Files\Rational\Clearcase\bin\cleartool"
            os="Windows 2000"
            output="${build}/${baselinefile}">
            <arg value="lsbl"/>
            <arg value="-fmt"/>
            <arg value="%n\t%Fu\t%d\n"/>
            <arg value="-stream"/>
            <arg value="${baselinestream}"/>
        </exec>
        <java classname="net.nike.common.build.BaselineReader">
            <arg value="${cdm.main.approot}/"/>
            <arg value="${buildinfo}"/>
            <arg value="${build}/${baselinefile}"/>
            <classpath path="${output}/classes"/>
            <classpath path="${lib}/nikenet-global.jar"/>
            <classpath path="${ant}/lib/ant.jar"/>
            <classpath path="${deprecated.lib.ant}/optional.jar"/>
        </java>
        <property file="${cdm.main.approot}/${buildinfo}"/>

        <echo>in build-info: BaselineName is ${BaselineName}</echo>
    </target>

    <target name="tar-app" depends="compile,generate,build-info" unless="tar-app.done,configure.done"
        description="Tars the entire project up">
        <!--        These locations will supercede those defined in the deploy targets.  This lets-->
        <!--        us deploy to multiple locations-->
        <property name="deploy.location" value="${build}/deploy"/>
        <property name="deploy.conf.location" value="${deploy.location}/conf"/>
        <property name="deploy.filename" value="${base.dir}/cdm-main.tar.gz"/>
        <property name="dont.use.junctions" value="true"/>

        <echo>deploy location is: ${deploy.location}</echo>
        <echo>deploy.conf.location is: ${deploy.conf.location}</echo>
        <echo>deploy.remote.loation is: ${deploy.remote.location}</echo>

        <delete file="${deploy.filename}" quiet="true"/>

        <!-- put the build info into the build dir.  -->
        <deploy-exploded-ear/>
        <deploy-exploded-ejb-app/>
        <deploy-exploded-war/>

        <antcall target="jar-applet" inheritall="true" inheritrefs="true"/>

        <!--                Notice that we're overwriting config info copied in the app deploys above....-->
        <copy-unconf/>

        <!--         copy the HTML files -->
        <copy todir="${deploy.location}" overwrite="true">
            <fileset dir="${base.dir}/htdocs"/>
        </copy>
        <mkdir dir="${build}/deploy/nike-deploy"/>

        <copy-build-stuff-for-server builddir="." buildfile="build-main.xml" antLocation="${base.dir}/apache-ant-1.6.2"/>
        <copy-fix-build-script file="build.main.sh"/>

        <copy todir="${deploy.location}/nike-deploy" overwrite="true">
            <fileset file="${deploy}/${buildinfo}"/>
        </copy>
        <echo message="Generating lists of substitution files"/>
        <list-files
            listfile="${deploy.location}/nike-deploy/substitutions.txt">
            <fileset dir="${deploy.location}">
                <include name="**/docs/index.html"/>
                <include name="**/*.xml"/>
                <include name="**/*.xsl"/>
                <include name="**/*.properties"/>
                <include name="**/build.sh"/>
                <include name="**/buildinfo.txt"/>
                <exclude name="**/exportclient/**.*"/>
            </fileset>
        </list-files>
        <!--        now delete any weblogic.jars in the distribution, as we don't need these for the application deploy-->
        <delete>
            <fileset dir="${build}" includes="**/weblogic.jar"/>
        </delete>
        <echo message="building tarball: ${deploy.location}/${deploy.filename}"/>
        <fix-files dir="${deploy.location}"/>
        <tar basedir="${deploy.location}"
            excludes="**/exportclient/**.*"
            destfile="${deploy.filename}"
            longfile="warn"
            compression="gzip"/>
        <property name="tar-app.done" value="done"/>
    </target>

    <target name="dist-app" depends="tar-app" unless="dist-app.done"
        description="Copies the entire project tar to the server">
        <echo>Creating remote deploy dir</echo>
        <mkdir dir="${deploy.remote.location}/build_${BaselineName}"/>

        <echo>in dist: BaselineName is ${BaselineName}</echo>
        <copy todir="${deploy.remote.location}/build_${BaselineName}"
            file="${deploy.filename}"/>

        <property name="dist-app.done" value="done"/>
    </target>

    <target name="dist-app-rc" depends="tar-app" unless="dist-app-rc.done"
        description="Copies the entire project tar to the server as a release candidate">

        <echo>Creating remote deploy dir for release candidate</echo>
        <mkdir dir="${deploy.remote.location}/build_${BaselineName}_rc"/>

        <echo>in dist: BaselineName is ${BaselineName}</echo>
        <copy todir="${deploy.remote.location}/build_${BaselineName}_rc"
            file="${deploy.filename}"/>

        <property name="dist-app-rc.done" value="done"/>
    </target>

    <target name="tar-server" depends="clean-all,build-info" unless="tar-server.done,configure.done"
        description="Tars the server part project up">
        <!--        These locations will supercede those defined in the deploy targets.  This lets-->
        <!--        us deploy to multiple locations-->
        <property name="deploy.location" value="${build}/serverdeploy"/>
        <property name="deploy.conf.location" value="${deploy.location}/conf"/>
        <property name="deploy.filename" value="${base.dir}/${cdm.main.server.distfile}"/>
        <property name="dont.use.junctions" value="true"/>

        <echo>deploy location is: ${deploy.location}</echo>
        <echo>deploy.conf.location is: ${deploy.conf.location}</echo>
        <echo>deploy.remote.loation is: ${deploy.remote.location}</echo>

        <mkdir dir="${deploy.location}/build"/>
        <mkdir dir="${build}/serverdeploy/nike-deploy"/>

        <copy-build-stuff-for-server builddir="." buildfile="build-server.xml" antLocation="${base.dir}/apache-ant-1.6.2"/>
        <!--        copy the build file for the app server (creates WL instance & dirs)-->
        <copy-fix-build-script file="build.server.sh"/>
        <copy file="stopManagedServer.sh" tofile="${deploy.location}/build/stopManagedServer.sh"/>
        <copy file="stopAdminServer.sh" tofile="${deploy.location}/build/stopAdminServer.sh"/>
        <copy file="startAll.sh" tofile="${deploy.location}/build/startAll.sh"/>
<!--        <copy-configure-fop-files filterset="cdmServerFilterSet"/>-->

        <copy todir="${build}/serverdeploy/nike-deploy">
            <fileset file="${deploy}/${buildinfo}"/>
        </copy>

        <!--        do the substitutions file-->
        <echo message="Generating lists of configurable files"/>
        <list-files
            listfile="${deploy.location}/nike-deploy/substitutions.txt">
            <fileset dir="${deploy.location}">
                <include name="**/build.properties"/>
                <include name="**/env.properties"/>
                <include name="**/build.sh"/>
                <include name="**/st*.sh"/>
                <include name="**/buildinfo.txt"/>
            </fileset>
        </list-files>

        <tar-dist/>
        <property name="tar-server.done" value="done"/>
    </target>

    <target name="dist-server" depends="tar-server" unless="dist-server.done"
        description="Copies the server part project tar to the server">
        <echo>Creating remote deploy dir</echo>
        <mkdir dir="${deploy.remote.location}/build_${BaselineName}"/>

        <echo>in dist: BaselineName is ${BaselineName}</echo>
        <copy todir="${deploy.remote.location}/build_${BaselineName}"
            file="${deploy.filename}"/>

        <property name="dist-server.done" value="done"/>
    </target>

    <target name="dist-server-rc" depends="tar-server" unless="dist-server-rc.done"
        description="Copies the server part project tar to the server as a release candidate">

        <echo>Creating remote deploy dir for release candidate</echo>
        <mkdir dir="${deploy.remote.location}/build_${BaselineName}_rc"/>

        <echo>in dist: BaselineName is ${BaselineName}</echo>
        <copy todir="${deploy.remote.location}/build_${BaselineName}_rc"
            file="${deploy.filename}"/>

        <property name="dist-server-rc.done" value="done"/>
    </target>

    <target name="dist-batch" depends="init">
        <!--    <target name="dist-batch" depends="init,clean-all">-->
        <!--        <antcall target="configure"/>-->
        <ant antfile="build-legacy.xml" target="legacy-configure" inheritall="false" inheritrefs="false"/>
        <antcall target="generate"/>
        <ant antfile="build-legacy.xml" target="legacy-dist" inheritall="false" inheritrefs="false"/>
    </target>

    <target name="dist-batch-rc" depends="init,clean-all">
        <ant antfile="build-legacy.xml" target="legacy-configure" inheritall="false" inheritrefs="false"/>
        <ant antfile="build-legacy.xml" target="legacy-dist-rc" inheritall="false" inheritrefs="false"/>
    </target>

    <!--    Tar up the distribution for the server-->
    <macrodef name="tar-dist">
        <sequential>
            <property name="deploy.location" value="${build}/serverdeploy"/>
            <property name="deploy.filename" value="${base.dir}/cdm-server.tar.gz"/>
            <echo message="building tarball: ${deploy.filename}"/>
            <echo message="deploy location is: ${deploy.location}"/>
            <delete file="${deploy.filename}" quiet="true"/>
            <fix-files dir="${deploy.location}/build"/>
            <tar
                destfile="${deploy.filename}"
                longfile="gnu"
                compression="gzip"
                >
                <tarfileset dir="${deploy.location}" mode="755" username="cdm65">
                    <include name="**/build.sh"/>
                    <include name="**/s*.sh"/>
                    <include name="**/apache-ant-1.6.2/bin/ant"/>
                </tarfileset>
                <tarfileset dir="${deploy.location}">
                    <include name="**"/>
                    <exclude name="**/build.sh"/>
                    <exclude name="**/s*.sh"/>
                    <exclude name="**/apache-ant-1.6.2/bin/ant"/>
                </tarfileset>
            </tar>
        </sequential>
    </macrodef>


</project>
