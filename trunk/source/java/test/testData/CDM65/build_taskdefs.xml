<?xml version="1.0" encoding="UTF-8"?>
<project name="cdm-taskdefs">
    <!--    This is the "taskdefs" target of CDM.  It contains all the project                                  -->
    <!--     task defs for reuse across buildfiles.                                                             -->
    <!--    You use this by pasting the following block into your build file (uncommented, of course):          -->
    <!--        <import file="build_dir.xml"/>                                                            -->
    <!--        <import file="build_properties.xml"/>                                                     -->
    <!--        <import file="build_paths.xml"/>                                                          -->
    <!--        <import file="build_taskdefs.xml"/>                                                       -->
    <!--    and the targets of these files are magically imported into your buildfile.  Make your "init" target -->
    <!--    have these as a dependency as follows, and you'll have all you need magically imported:             -->
    <!--        <target name="init" depends="properties,paths,taskdefs" unless="init.done">                     -->


    <target name="taskdefs" depends="properties">
        <taskdef resource="emma_ant.properties" classpathref="emma.path"/>

        <!-- This taskdef requires junit.jar to be in the ant classpath.  I do not know why.-->
        <taskdef resource="cactus.tasks">
            <classpath>
                <pathelement location="${lib.testing}/cactus-1.5.jar"/>
                <pathelement location="${lib.testing}/cactus-ant-1.5.jar"/>
                <pathelement location="${lib.commons}/commons-httpclient.jar"/>
                <pathelement location="${lib.commons}/commons-logging.jar"/>
                <pathelement location="${lib}/aspectjrt-1.1.1.jar"/>
            </classpath>
        </taskdef>

        <taskdef name="strutsdoc" classname="strutsdoc.Main">
            <classpath location="${lib.struts}/struts.jar"/>
            <classpath location="${deprecated.lib.ant}/strutsdoc-0.4.jar"/>
            <classpath location="${deprecated.lib.ant}/xalan.jar"/>
            <classpath location="${deprecated.lib.ant}/xml-apis.jar"/>
        </taskdef>

        <!--     Define the hibernatedoclet task-->
        <taskdef name="hibernatedoclet"
            classname="xdoclet.modules.hibernate.HibernateDocletTask">
            <classpath>
                <fileset dir="${deprecated.lib.ant}/xdoclet">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
            <classpath location="${lib.commons}/commons-collections.jar"/>
            <classpath location="${lib.commons}/commons-logging.jar"/>
        </taskdef>


        <taskdef name="list-files" classname="net.nike.common.build.ListFiles">
            <classpath location="${lib}/nikenet-global.jar"/>
        </taskdef>

    </target>


    <target name="macrodefs">
        <!--        <macrodef name="run-environment-tool">-->
        <!-- the "root" of the VOB containing, among others, the "build," "src" and "conf" directories -->
        <!--            <attribute name="base.dir"/>-->
        <!-- the directory containing the files to operate on. -->
        <!--            <attribute name="working.dir"/>-->
        <!--            <attribute name="envtool.location"/>-->
        <!--            <attribute name="envstore.location"/>-->
        <!--            <attribute name="envtool.key"/>-->
        <!--            <attribute name="envtool.log"/>-->
        <!--            <sequential>-->
        <!--                        Call env-config -->
        <!--                <echo message="working.dir=@{working.dir}"/>-->
        <!--                <exec executable="@{base.dir}/bin/envtool.bat" failonerror="true">-->
        <!--                    <arg value="@{working.dir}"/>-->
        <!--                    <arg path="@{base.dir}/@{envtool.location}"/>-->
        <!--                    <arg value="@{envstore.location}"/>-->
        <!--                    <arg value="@{envtool.key}"/>-->
        <!--                    <arg value="@{envtool.log}"/>-->
        <!--                </exec>-->
        <!--            </sequential>-->
        <!--        </macrodef>-->
    </target>
</project>